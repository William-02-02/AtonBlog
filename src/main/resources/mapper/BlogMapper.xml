<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lyh.AtonBlog.dao.BlogMapper">

    <resultMap id="BaseResultMap" type="com.lyh.AtonBlog.pojo.Blog">
            <id property="blogId" column="blog_id" jdbcType="BIGINT"/>
            <result property="blogTitle" column="blog_title" jdbcType="VARCHAR"/>
            <result property="blogSubUrl" column="blog_sub_url" jdbcType="VARCHAR"/>
            <result property="blogCoverImage" column="blog_cover_image" jdbcType="VARCHAR"/>
            <result property="blogContent" column="blog_content" jdbcType="VARCHAR"/>
            <result property="blogCategoryId" column="blog_category_id" jdbcType="INTEGER"/>
            <result property="blogCategoryName" column="blog_category_name" jdbcType="VARCHAR"/>
            <result property="blogTags" column="blog_tags" jdbcType="VARCHAR"/>
            <result property="blogStatus" column="blog_status" jdbcType="TINYINT"/>
            <result property="blogViews" column="blog_views" jdbcType="BIGINT"/>
            <result property="enableComment" column="enable_comment" jdbcType="TINYINT"/>
            <result property="isDeleted" column="is_deleted" jdbcType="TINYINT"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
            <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        blog_id,blog_title,blog_sub_url,
        blog_cover_image,blog_content,blog_category_id,
        blog_category_name,blog_tags,blog_status,
        blog_views,enable_comment,is_deleted,
        create_time,update_time
    </sql>
    
    <!--manual-->
    <update id="updateBlogCategories">
        update tb_blog
        set  blog_category_id = #{categoryId,jdbcType=INTEGER,javaType=INTEGER},
             blog_category_name = #{categoryName}
        where blog_category_id in 
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        and is_deleted = 0;
    </update>
	
    <update id="deleteBatch" >
        update tb_blog
        set is_deleted = 1 where blog_id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
    
    <select id="findBlogListByMap" parameterType="map" resultMap="BaseResultMap">
        select * from tb_blog where is_deleted=0
        <if test="keyword != null">
            and (blog_title like concat('%',#{keyword},'%') or blog_category_name like concat('%',#{keyword},'%'))
        </if>
        <if test="blogStatus != null">
            and blog_status = #{blogStatus}
        </if>
        <if test="blogCategoryId != null">
            and blog_category_id = #{blogCategoryId}
        </if>
        order by blog_id desc
        <if test="start != null and pageVolume != null">
            limit #{start},#{pageVolume}
        </if>
    </select>
    
    <select id="countBlog" parameterType="map" resultType="int">
        select count(*)
        from tb_blog
        where is_deleted=0
        <if test="keyword != null">
            and (blog_title like concat('%',#{keyword},'%') or blog_category_name like concat('%',#{keyword},'%'))
        </if>
        <if test="blogStatus!=null">
            AND blog_status = #{blogStatus}
        </if>
        <if test="blogCategoryId!=null">
            AND blog_category_id = #{blogCategoryId}
        </if>
    </select>
    
    <select id="selectAllByBlogIdBatch"  resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from tb_blog
        where  blog_id in
        <foreach collection="array" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
    
	
    <!--generator-->
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from tb_blog
        where  blog_id = #{blogId,jdbcType=BIGINT} 
        and is_deleted = 0
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from tb_blog
        where  blog_id = #{blogId,jdbcType=BIGINT} 
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.lyh.AtonBlog.pojo.Blog" useGeneratedKeys="true">
        insert into tb_blog
        ( blog_id,blog_title,blog_sub_url
        ,blog_cover_image,blog_content,blog_category_id
        ,blog_category_name,blog_tags,blog_status
        ,blog_views,enable_comment,is_deleted
        ,create_time,update_time)
        values (#{blogId,jdbcType=BIGINT},#{blogTitle,jdbcType=VARCHAR},#{blogSubUrl,jdbcType=VARCHAR}
        ,#{blogCoverImage,jdbcType=VARCHAR},#{blogContent,jdbcType=VARCHAR},#{blogCategoryId,jdbcType=INTEGER}
        ,#{blogCategoryName,jdbcType=VARCHAR},#{blogTags,jdbcType=VARCHAR},#{blogStatus,jdbcType=TINYINT}
        ,#{blogViews,jdbcType=BIGINT},#{enableComment,jdbcType=TINYINT},#{isDeleted,jdbcType=TINYINT}
        ,#{createTime,jdbcType=TIMESTAMP},#{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" keyColumn="blog_id" keyProperty="blogId" parameterType="com.lyh.AtonBlog.pojo.Blog" useGeneratedKeys="true">
        insert into tb_blog
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="blogId != null">blog_id,</if>
                <if test="blogTitle != null">blog_title,</if>
                <if test="blogSubUrl != null">blog_sub_url,</if>
                <if test="blogCoverImage != null">blog_cover_image,</if>
                <if test="blogContent != null">blog_content,</if>
                <if test="blogCategoryId != null">blog_category_id,</if>
                <if test="blogCategoryName != null">blog_category_name,</if>
                <if test="blogTags != null">blog_tags,</if>
                <if test="blogStatus != null">blog_status,</if>
                <if test="blogViews != null">blog_views,</if>
                <if test="enableComment != null">enable_comment,</if>
                <if test="isDeleted != null">is_deleted,</if>
                <if test="createTime != null">create_time,</if>
                <if test="updateTime != null">update_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="blogId != null"> #{blogId,jdbcType=BIGINT},</if>
                <if test="blogTitle != null"> #{blogTitle,jdbcType=VARCHAR},</if>
                <if test="blogSubUrl != null"> #{blogSubUrl,jdbcType=VARCHAR},</if>
                <if test="blogCoverImage != null"> #{blogCoverImage,jdbcType=VARCHAR},</if>
                <if test="blogContent != null"> #{blogContent,jdbcType=VARCHAR},</if>
                <if test="blogCategoryId != null"> #{blogCategoryId,jdbcType=INTEGER},</if>
                <if test="blogCategoryName != null"> #{blogCategoryName,jdbcType=VARCHAR},</if>
                <if test="blogTags != null"> #{blogTags,jdbcType=VARCHAR},</if>
                <if test="blogStatus != null"> #{blogStatus,jdbcType=TINYINT},</if>
                <if test="blogViews != null"> #{blogViews,jdbcType=BIGINT},</if>
                <if test="enableComment != null"> #{enableComment,jdbcType=TINYINT},</if>
                <if test="isDeleted != null"> #{isDeleted,jdbcType=TINYINT},</if>
                <if test="createTime != null"> #{createTime,jdbcType=TIMESTAMP},</if>
                <if test="updateTime != null"> #{updateTime,jdbcType=TIMESTAMP},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.lyh.AtonBlog.pojo.Blog">
        update tb_blog
        <set>
                <if test="blogTitle != null">
                    blog_title = #{blogTitle,jdbcType=VARCHAR},
                </if>
                <if test="blogSubUrl != null">
                    blog_sub_url = #{blogSubUrl,jdbcType=VARCHAR},
                </if>
                <if test="blogCoverImage != null">
                    blog_cover_image = #{blogCoverImage,jdbcType=VARCHAR},
                </if>
                <if test="blogContent != null">
                    blog_content = #{blogContent,jdbcType=VARCHAR},
                </if>
                <if test="blogCategoryId != null">
                    blog_category_id = #{blogCategoryId,jdbcType=INTEGER},
                </if>
                <if test="blogCategoryName != null">
                    blog_category_name = #{blogCategoryName,jdbcType=VARCHAR},
                </if>
                <if test="blogTags != null">
                    blog_tags = #{blogTags,jdbcType=VARCHAR},
                </if>
                <if test="blogStatus != null">
                    blog_status = #{blogStatus,jdbcType=TINYINT},
                </if>
                <if test="blogViews != null">
                    blog_views = #{blogViews,jdbcType=BIGINT},
                </if>
                <if test="enableComment != null">
                    enable_comment = #{enableComment,jdbcType=TINYINT},
                </if>
                <if test="isDeleted != null">
                    is_deleted = #{isDeleted,jdbcType=TINYINT},
                </if>
                <if test="createTime != null">
                    create_time = #{createTime,jdbcType=TIMESTAMP},
                </if>
                <if test="updateTime != null">
                    update_time = #{updateTime,jdbcType=TIMESTAMP},
                </if>
        </set>
        where   blog_id = #{blogId,jdbcType=BIGINT} 
    </update>
    <update id="updateByPrimaryKey" parameterType="com.lyh.AtonBlog.pojo.Blog">
        update tb_blog
        set 
            blog_title =  #{blogTitle,jdbcType=VARCHAR},
            blog_sub_url =  #{blogSubUrl,jdbcType=VARCHAR},
            blog_cover_image =  #{blogCoverImage,jdbcType=VARCHAR},
            blog_content =  #{blogContent,jdbcType=VARCHAR},
            blog_category_id =  #{blogCategoryId,jdbcType=INTEGER},
            blog_category_name =  #{blogCategoryName,jdbcType=VARCHAR},
            blog_tags =  #{blogTags,jdbcType=VARCHAR},
            blog_status =  #{blogStatus,jdbcType=TINYINT},
            blog_views =  #{blogViews,jdbcType=BIGINT},
            enable_comment =  #{enableComment,jdbcType=TINYINT},
            is_deleted =  #{isDeleted,jdbcType=TINYINT},
            create_time =  #{createTime,jdbcType=TIMESTAMP},
            update_time =  #{updateTime,jdbcType=TIMESTAMP}
        where   blog_id = #{blogId,jdbcType=BIGINT} 
    </update>
    <select id="selectByBlogTitle" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tb_blog
        where
        blog_title = #{blogTitle,jdbcType=VARCHAR}
        and is_deleted = 0
    </select>
	<select id="selectBlogListByType" resultMap="BaseResultMap">
        select * 
        from tb_blog
        where is_deleted = 0 and blog_status = 1
        <if test="type != null and type =0">
            order by blog_views desc
        </if>
        <if test="type != null and type =1">
            order by blog_id desc
        </if>
        limit #{limit}
    </select>
	<select id="selectByBlogSubUrl" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List"/>
		from tb_blog
		where
		blog_sub_url = #{blogSubUrl,jdbcType=VARCHAR} 
        and is_deleted = 0
	</select>
    <select id="selectBlogPageByTagId" parameterType="map" resultMap="BaseResultMap">
        select * from tb_blog
        where blog_id in (select blog_id from tb_blog_tag_relation where tag_id=#{tagId})
        and blog_status = 1 and is_deleted =0
        order by blog_id desc
        <if test="start != null and pageVolume != null ">
            limit #{start},#{pageVolume}
        </if>
    </select>
    <select id="getBlogCountByTagId" resultType="java.lang.Integer">
        select count(*) from tb_blog
        where blog_id in (select blog_id from tb_blog_tag_relation where tag_id=#{tagId})
          and blog_status = 1 and is_deleted =0
        order by blog_id desc
    </select>
    <select id="getBlogCountByCategoryId" parameterType="map" resultType="java.lang.Integer">
        select count(*) from tb_blog
        where is_deleted=0
        <if test="keyword!=null">
            AND (blog_title like CONCAT('%',#{keyword},'%' ) or blog_category_name like CONCAT('%',#{keyword},'%' ))
        </if>
        <if test="blogStatus!=null">
            AND blog_status = #{blogStatus}
        </if>
        <if test="blogCategoryId!=null">
            AND blog_category_id = #{blogCategoryId}
        </if>

    </select>

</mapper>
